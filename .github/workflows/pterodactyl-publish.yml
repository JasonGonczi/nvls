name: Docker

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
    paths:
      - 'containers/pterodactyl/Dockerfile'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'containers/pterodactyl/Dockerfile'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Extract Pterodactyl version
      run: echo "PTERODACTYL_VERSION=$(grep 'FROM ccarney16/pterodactyl-panel:' ./containers/pterodactyl/Dockerfile | awk -F':' '{print $2}')" >> $GITHUB_ENV

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
      with:
        context: ./containers/pterodactyl/
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/pterodactyl:${{ env.PTERODACTYL_VERSION }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: cosign-installer
      uses: sigstore/cosign-installer@v3.1.1
      
    - name: Write the Cosign private key to a file
      run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
      env:
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        
    - name: Sign the Docker Image
      if: github.event_name != 'pull_request'
      env:
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      run: |
        cosign sign --key cosign.key ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ env.DIGEST }}

        
